# Generated by Django 5.2.3 on 2025-06-21 03:53

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nombre de la Categoría')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Kit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Nombre del Kit')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción del Kit')),
            ],
            options={
                'verbose_name': 'Kit',
                'verbose_name_plural': 'Kits',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Nombre del Proveedor')),
                ('contact_person', models.CharField(blank=True, max_length=255, null=True, verbose_name='Persona de Contacto')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email de Contacto')),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono de Contacto')),
                ('payment_terms', models.TextField(blank=True, null=True, verbose_name='Términos de Pago')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Dirección')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre de la Etiqueta')),
            ],
            options={
                'verbose_name': 'Etiqueta',
                'verbose_name_plural': 'Etiquetas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrador'), ('GESTOR_INV', 'Gestor de Inventario'), ('COMPRADOR', 'Comprador'), ('LOGISTICA', 'Logística'), ('JEFE_PROD', 'Jefe de Producción'), ('AUDITOR', 'Auditor'), ('GERENTE_PROY', 'Gerente de Proyecto'), ('USUARIO_FINAL', 'Usuario Final')], default='USUARIO_FINAL', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_profiles', related_query_name='user_profile', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_profiles', related_query_name='user_profile', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre del Ítem')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Número de Serie')),
                ('location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ubicación en Almacén')),
                ('quantity', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Cantidad Actual')),
                ('low_stock_threshold', models.DecimalField(decimal_places=2, default=5.0, max_digits=10, verbose_name='Umbral de Stock Bajo')),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Precio de Compra')),
                ('expiration_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Vencimiento')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_items', to='inventory.category', verbose_name='Categoría')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supplied_items', to='inventory.supplier', verbose_name='Proveedor')),
                ('tags', models.ManyToManyField(blank=True, related_name='inventory_items', to='inventory.tag', verbose_name='Etiquetas')),
            ],
            options={
                'verbose_name': 'Ítem de Inventario',
                'verbose_name_plural': 'Ítems de Inventario',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('ENTRADA', 'Entrada'), ('SALIDA', 'Salida'), ('TRANSFERENCIA', 'Transferencia'), ('DEVOLUCION', 'Devolución')], max_length=20, verbose_name='Tipo de Movimiento')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cantidad')),
                ('movement_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha y Hora del Movimiento')),
                ('project', models.CharField(blank=True, max_length=255, null=True, verbose_name='Proyecto Asociado')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='inventory.inventoryitem', verbose_name='Ítem')),
                ('moved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Realizado por')),
            ],
            options={
                'verbose_name': 'Movimiento de Inventario',
                'verbose_name_plural': 'Movimientos de Inventario',
                'ordering': ['-movement_date'],
            },
        ),
        migrations.CreateModel(
            name='KitItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, default=1.0, max_digits=10, verbose_name='Cantidad en el Kit')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.inventoryitem')),
                ('kit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.kit')),
            ],
            options={
                'verbose_name': 'Ítem en Kit',
                'verbose_name_plural': 'Ítems en Kits',
                'unique_together': {('kit', 'item')},
            },
        ),
        migrations.AddField(
            model_name='kit',
            name='items',
            field=models.ManyToManyField(related_name='kits', through='inventory.KitItem', to='inventory.inventoryitem', verbose_name='Ítems del Kit'),
        ),
    ]
